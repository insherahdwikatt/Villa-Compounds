-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admin
(
    id integer NOT NULL,
    password character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT admin_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cheque_payment
(
    cheque_payment_id serial NOT NULL,
    owner_id integer,
    villa_id integer,
    cheque_amount numeric,
    number_of_cheques integer,
    due_date date,
    CONSTRAINT cheque_payment_pkey PRIMARY KEY (cheque_payment_id)
);

CREATE TABLE IF NOT EXISTS public.compounds
(
    compound_id serial NOT NULL,
    villa_price numeric,
    profits numeric,
    total_cost numeric,
    number_of_villas integer,
    location text COLLATE pg_catalog."default",
    CONSTRAINT compounds_pkey PRIMARY KEY (compound_id)
);

CREATE TABLE IF NOT EXISTS public.manager
(
    id integer NOT NULL,
    password character varying(100) COLLATE pg_catalog."default",
    salary numeric,
    compound_id integer,
    CONSTRAINT manager_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.owners
(
    owner_id integer NOT NULL,
    property_count integer,
    CONSTRAINT owners_pkey PRIMARY KEY (owner_id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    payment_id serial NOT NULL,
    villa_id integer,
    owner_id integer,
    amount numeric,
    payments_date date,
    payment_method character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS public.person
(
    person_id serial NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default",
    middle_name character varying(50) COLLATE pg_catalog."default",
    last_name character varying(50) COLLATE pg_catalog."default",
    birthdate character varying(20) COLLATE pg_catalog."default",
    phone_number character varying(15) COLLATE pg_catalog."default",
    national_id character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    bank_account character varying(100) COLLATE pg_catalog."default",
    city character varying(50) COLLATE pg_catalog."default",
    street character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT person_pkey PRIMARY KEY (person_id)
);

CREATE TABLE IF NOT EXISTS public.villas
(
    villa_id serial NOT NULL,
    owner_id integer,
    compound_id integer,
    status character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT villas_pkey PRIMARY KEY (villa_id)
);

CREATE TABLE IF NOT EXISTS public.worker_payment
(
    worker_payment_id serial NOT NULL,
    worker_id integer,
    date date,
    salary numeric,
    CONSTRAINT worker_payment_pkey PRIMARY KEY (worker_payment_id)
);

CREATE TABLE IF NOT EXISTS public.workers
(
    worker_id integer NOT NULL,
    salary numeric,
    work_hours integer,
    end_of_lease character varying(50) COLLATE pg_catalog."default",
    compound_id integer,
    field character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT workers_pkey PRIMARY KEY (worker_id)
);

ALTER TABLE IF EXISTS public.admin
    ADD CONSTRAINT admin_id_fkey FOREIGN KEY (id)
    REFERENCES public.person (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS admin_pkey
    ON public.admin(id);


ALTER TABLE IF EXISTS public.cheque_payment
    ADD CONSTRAINT cheque_payment_owner_id_fkey FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE IF EXISTS public.cheque_payment
    ADD CONSTRAINT cheque_payment_villa_id_fkey FOREIGN KEY (villa_id)
    REFERENCES public.villas (villa_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.manager
    ADD CONSTRAINT manager_compound_id_fkey FOREIGN KEY (compound_id)
    REFERENCES public.compounds (compound_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.manager
    ADD CONSTRAINT manager_id_fkey FOREIGN KEY (id)
    REFERENCES public.person (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS manager_pkey
    ON public.manager(id);


ALTER TABLE IF EXISTS public.owners
    ADD CONSTRAINT owners_owner_id_fkey FOREIGN KEY (owner_id)
    REFERENCES public.person (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS owners_pkey
    ON public.owners(owner_id);


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_owner_id_fkey FOREIGN KEY (owner_id)
    REFERENCES public.owners (owner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_villa_id_fkey FOREIGN KEY (villa_id)
    REFERENCES public.villas (villa_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.villas
    ADD CONSTRAINT villas_compound_id_fkey FOREIGN KEY (compound_id)
    REFERENCES public.compounds (compound_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.workers
    ADD CONSTRAINT workers_worker_id_fkey FOREIGN KEY (worker_id)
    REFERENCES public.person (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS workers_pkey
    ON public.workers(worker_id);

END;